name: Workspace

on:
  pull_request:
    paths-ignore:
      - README.md
  push:
    branches:
      - main

env:
  RUSTFLAGS: "-Dwarnings"

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
          components: clippy, rustfmt
      - uses: actions/cache@v4
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-
      - run: cargo clippy --all --all-features -- -D warnings
      - run: cargo fmt --all -- --check
#      - uses: bnjbvr/cargo-machete@main
      - name: Install cargo-sort
        uses: baptiste0928/cargo-install@v3
        with:
          crate: cargo-sort
      - name: Install taplo
        uses: baptiste0928/cargo-install@v3
        with:
          crate: taplo-cli
      - run: taplo fmt --check

  test:
    runs-on: ubuntu-latest
    needs: [ check ]
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            rust: stable
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          targets: ${{ matrix.target }}
      - uses: actions/cache@v4
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-
      - run: ${{ matrix.deps }}
      - run: cargo check --all-features
      - run: cargo test

#  codecov:
#    runs-on: ubuntu-latest
#    needs: [ test ]
#    steps:
#      - uses: actions/checkout@v4
#      - uses: dtolnay/rust-toolchain@v1
#        with:
#          toolchain: stable
#          targets: x86_64-unknown-linux-gnu
#      - name: Install cargo-llvm-cov
#        uses: taiki-e/install-action@cargo-llvm-cov
#      - name: Generate code coverage
#        run: cargo llvm-cov --workspace --lcov --output-path lcov.info --no-default-features
#      - name: Upload coverage to Codecov
#        uses: codecov/codecov-action@v3
#        with:
#          files: lcov.info
#          fail_ci_if_error: true
